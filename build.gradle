// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter() {}
        maven { url 'https://maven.aliyun.com/repository/central/' }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url "https://jitpack.io" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.0"
        //JitPack 步骤一
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.github.nearbyren:ensd-composing-builds:1.2.9'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.github.kezong:fat-aar:1.3.8'

    }
}
allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter() {}
        maven { url 'https://maven.aliyun.com/repository/central/' }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url "https://jitpack.io" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}
//如果要测试本地插件,记得在这里打开下面的开关，手动导入插件
//apply false代表此插件仅应用于构建中的部分或全部子model, 而不是root项目
//如果要在项目中手动使用独立项目定义的插件,需要在这里进入导入
//plugins {
//    id "ejiayou.composing.builds" apply false
//}
task clean(type: Delete) {
    delete rootProject.buildDir
}