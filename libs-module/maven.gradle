apply plugin: 'maven-publish'

configurations.maybeCreate("default")
def baidu = artifacts.add("default", file('../LocalRepo/baidu/BaiduLBS_AndroidSDK_Lib.aar'))
configurations.maybeCreate("default")
def auth = artifacts.add("default", file('../LocalRepo/auth/auth_number.aar'))
configurations.maybeCreate("default")
def authlog = artifacts.add("default", file('../LocalRepo/authlog/logger-2.1.4-release.aar'))
configurations.maybeCreate("default")
def authmain = artifacts.add("default", file('../LocalRepo/authmain/main-2.1.4-release.aar'))
configurations.maybeCreate("default")
def authucarsh = artifacts.add("default", file('../LocalRepo/authucarsh/crashshield-2.1.4-release.aar'))
configurations.maybeCreate("default")
def yinlian = artifacts.add("default", file('../LocalRepo/yinlian/UPPayAssistEx.jar'))
configurations.maybeCreate("default")
def abcbank = artifacts.add("default", file('../LocalRepo/abcbank/BankABCCaller.jar'))

afterEvaluate {
    publishing {

        // Repositories *to* which Gradle can publish artifacts
        // 配置maven仓库 仓库地址可配置多个 执行publish任务时 会把aar包发步到所有指定的maven仓库
        repositories { RepositoryHandler handler ->

            if (!isRemoteAar.toBoolean()) {
                //执行命令 右侧 gradle -> xxx-xxx[common-module] -> Tasks -> publishing -> publish
                // 指定路径的本地仓库
                handler.mavenLocal()
                handler.maven {
                    url "${rootDir}/repo"
                }
            } else {
                maven {
                    url uri("https://gitlab.ejiayou.com/api/v4/projects/578/packages/maven")
                    credentials(HttpHeaderCredentials) {
                        name = "Deploy-Token"
                        value = "NyHu_b5KQ9qRva6MU2J6"
                    }
                    authentication {
                        header(HttpHeaderAuthentication)
                    }
                }
            }
        }

        publications {

            MevonBaidu(MavenPublication) {
                // Applies the component for the release build variant.
                groupId = 'ejiayou.libs.module'
                artifactId = 'baidu'
                version = '1.0.0'
                // 将aar推送到远程仓库
                artifact baidu    //Example: *./target/myJavaClasses.jar*

            }

            MevonAuth(MavenPublication) {
                // Applies the component for the release build variant.
                groupId = 'ejiayou.libs.module'
                artifactId = 'auth'
                version = '1.0.0'
                // 将aar推送到远程仓库
                artifact auth    //Example: *./target/myJavaClasses.jar*

            }

            MevonAuthlog(MavenPublication) {
                // Applies the component for the release build variant.
                groupId = 'ejiayou.libs.module'
                artifactId = 'authlog'
                version = '1.0.0'
                // 将aar推送到远程仓库
                artifact authlog    //Example: *./target/myJavaClasses.jar*

            }

            MevonAuthmain(MavenPublication) {
                // Applies the component for the release build variant.
                groupId = 'ejiayou.libs.module'
                artifactId = 'authmain'
                version = '1.0.0'
                // 将aar推送到远程仓库
                artifact authmain    //Example: *./target/myJavaClasses.jar*

            }

            MevonAuthucarsh(MavenPublication) {
                // Applies the component for the release build variant.
                groupId = 'ejiayou.libs.module'
                artifactId = 'authucarsh'
                version = '1.0.0'
                // 将aar推送到远程仓库
                artifact authucarsh    //Example: *./target/myJavaClasses.jar*

            }

            MevonYinLian(MavenPublication) {
                // Applies the component for the release build variant.
                groupId = 'ejiayou.libs.module'
                artifactId = 'yinlian'
                version = '1.0.0'
                // 将aar推送到远程仓库
                artifact yinlian    //Example: *./target/myJavaClasses.jar*

            }

            MevonABCbank(MavenPublication) {
                // Applies the component for the release build variant.
                groupId = 'ejiayou.libs.module'
                artifactId = 'abcbank'
                version = '1.0.0'
                // 将aar推送到远程仓库
                artifact abcbank    //Example: *./target/myJavaClasses.jar*
            }
        }

    }
}
